# Generated by Django 5.2.2 on 2025-06-15 10:49

import common.common
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_id', models.CharField(default=common.common.generate_pub_id, editable=False, max_length=8, unique=True)),
                ('dept_name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'department',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_id', models.CharField(default=common.common.generate_pub_id, editable=False, max_length=8, unique=True)),
                ('company_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('domain', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=200)),
                ('contact_no', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'organization',
            },
        ),
        migrations.CreateModel(
            name='Priority',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_id', models.CharField(default=common.common.generate_pub_id, editable=False, max_length=8, unique=True)),
                ('priority', models.CharField(max_length=100)),
                ('duration', models.DurationField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'priority',
            },
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_id', models.CharField(default=common.common.generate_pub_id, editable=False, max_length=8, unique=True)),
                ('emp_code', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('contact_no', models.CharField(max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='ticketing.department')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ticketing.organization')),
            ],
            options={
                'db_table': 'manager',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_id', models.CharField(default=common.common.generate_pub_id, editable=False, max_length=8, unique=True)),
                ('emp_code', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('contact_no', models.CharField(max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ticketing.organization')),
            ],
            options={
                'db_table': 'employee',
            },
        ),
        migrations.CreateModel(
            name='DepartmentOnCallSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_id', models.CharField(default=common.common.generate_pub_id, editable=False, max_length=8, unique=True)),
                ('start_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ticketing.department')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ticketing.organization')),
            ],
            options={
                'db_table': 'department_on_call_schedule',
            },
        ),
        migrations.AddField(
            model_name='department',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ticketing.organization'),
        ),
        migrations.CreateModel(
            name='SupportAgent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_id', models.CharField(default=common.common.generate_pub_id, editable=False, max_length=8, unique=True)),
                ('emp_code', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('contact_no', models.CharField(max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='ticketing.manager')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ticketing.organization')),
            ],
            options={
                'db_table': 'support_agent',
            },
        ),
        migrations.CreateModel(
            name='CreateTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_id', models.CharField(default=common.common.generate_pub_id, editable=False, max_length=8, unique=True)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('attachment', models.FileField(blank=True, null=True, upload_to='ticket_attachments')),
                ('status', models.CharField(default='Open', max_length=100)),
                ('escalated_status', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ticketing.department')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ticketing.employee')),
                ('escalated_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='ticketing.manager')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ticketing.organization')),
                ('priority', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ticketing.priority')),
                ('assign_to', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ticketing.supportagent')),
            ],
            options={
                'db_table': 'create_ticket',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_id', models.CharField(default=common.common.generate_pub_id, editable=False, max_length=8, unique=True)),
                ('comment', models.TextField()),
                ('order', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ticketing.createticket')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='ticketing.employee')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='ticketing.manager')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ticketing.organization')),
                ('support_agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='ticketing.supportagent')),
            ],
            options={
                'db_table': 'comment',
            },
        ),
    ]
